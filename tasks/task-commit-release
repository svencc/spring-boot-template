#!/bin/sh

# DEFINE INPUT PARAMETER --------------------------------------------------------------------------------------------- #

TARGET_MAJOR_VERSION=$1
TARGET_MINOR_VERSION=$2

## validate input parameters
if [ $# -ne 2 ]; then
  echo "Invalid nr of arguments supplied; Expected <TARGET_MAJOR_VERSION> <TARGET_MINOR_VERSION>"
  exit 255
fi

## validate if we are calling from correct directory
TASK_DIRECTORY=$(pwd)
if test -d "$TASK_DIRECTORY/lib"; then
  echo "Calling from correct directory"
  # Add lib to path
  export PATH=$PATH:$TASK_DIRECTORY:$TASK_DIRECTORY/lib
else
  echo "You didnt call from tasks directory!"
  exit 255
fi

# END DEFINE INPUT PARAMETER ------------------------------------------------------------------------------------- END #





# DEFINE FUNCTIONS --------------------------------------------------------------------------------------------------- #

#PARAM $1   _branch
#RETURN     "true" | "false" on stdout
doesBranchAlreadyExists() {
  _branch=${1}
  _exists=$(git show-ref refs/heads/"$_branch")

  if [ -n "$_exists" ]; then
    echo true
  else
    echo false
  fi
}

# END DEFINE FUNCTIONS ------------------------------------------------------------------------------------------- END #





# ==> MAIN LOGIC <== #
echo "Commit ..."

_releaseBranchName="release/$TARGET_MAJOR_VERSION.$TARGET_MINOR_VERSION.x"
if [ "$(doesBranchAlreadyExists "$_releaseBranchName")" ]; then
  cd .. # Change working dir into project
  git commit -a -m release/"$TARGET_MAJOR_VERSION.$TARGET_MINOR_VERSION.x"
  git push
  git tag "$TARGET_MAJOR_VERSION.$TARGET_MINOR_VERSION.0"
  git push -u origin "$TARGET_MAJOR_VERSION.$TARGET_MINOR_VERSION.0"
fi
